;; Object lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lisp/"
  :tables
  (list
    (semanticdb-table "subr.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("custom-declare-variable-list" variable nil nil [1076 1270])
            ("custom-declare-variable-early" function (:arguments ("arguments")) nil [1363 1503])
            ("declare-function" function (:arguments ("fn" "file" "arglist" "fileonly")) nil [1505 3022])
            ("defalias" code nil nil [3051 3072])
            ("noreturn" function (:arguments ("form")) nil [3074 3278])
            ("1value" function (:arguments ("form")) nil [3280 3518])
            ("def-edebug-spec" function (:arguments ("symbol" "spec")) nil [3520 3980])
            ("lambda" function (:arguments ("cdr")) nil [3982 5140])
            ("setq-local" function (:arguments ("var" "val")) nil [5142 5354])
            ("defvar-local" function (:arguments ("var" "val" "docstring")) nil [5356 5797])
            ("apply-partially" function (:arguments ("fun" "args")) nil [5799 6214])
            ("push" function (:arguments ("newelt" "place")) nil [6216 6810])
            ("pop" function (:arguments ("place")) nil [6812 7376])
            ("when" function (:arguments ("cond" "body")) nil [7378 7666])
            ("unless" function (:arguments ("cond" "body")) nil [7668 7954])
            ("if" code nil nil [7956 11547])
            ("ignore-errors" function (:arguments ("body")) nil [11549 11856])
            ("ignore" function
               (:user-visible-flag t
                :arguments ("_ignore"))
                nil [11887 12035])
            ("error" function (:arguments ("args")) nil [12092 12421])
            ("set-advertised-calling-convention" code nil nil [12422 12492])
            ("user-error" function (:arguments ("format" "args")) nil [12494 13034])
            ("frame-configuration-p" function (:arguments ("object")) nil [13148 13403])
            ("caar" function (:arguments ("x")) nil [13428 13499])
            ("cadr" function (:arguments ("x")) nil [13501 13572])
            ("cdar" function (:arguments ("x")) nil [13574 13645])
            ("cddr" function (:arguments ("x")) nil [13647 13718])
            ("last" function (:arguments ("list" "n")) nil [13720 14137])
            ("butlast" function (:arguments ("list" "n")) nil [14139 14300])
            ("nbutlast" function (:arguments ("list" "n")) nil [14302 14530])
            ("delete-dups" function (:arguments ("list")) nil [14532 14885])
            ("number-sequence" function (:arguments ("from" "to" "inc")) nil [14887 16711])
            ("copy-tree" function (:arguments ("tree" "vecp")) nil [16713 17462])
            ("assoc-default" function (:arguments ("key" "alist" "test" "default")) nil [17502 18302])
            ("assoc-ignore-case" function (:arguments ("key" "alist")) nil [18304 18626])
            ("assoc-ignore-representation" function (:arguments ("key" "alist")) nil [18628 18896])
            ("member-ignore-case" function (:arguments ("elt" "list")) nil [18898 19333])
            ("assq-delete-all" function (:arguments ("key" "alist")) nil [19335 19819])
            ("rassq-delete-all" function (:arguments ("value" "alist")) nil [19821 20314])
            ("remove" function (:arguments ("elt" "seq")) nil [20316 20669])
            ("remq" function (:arguments ("elt" "list")) nil [20671 21002])
            ("kbd" function (:arguments ("keys")) nil [21027 21337])
            ("put" code nil nil [21338 21356])
            ("undefined" function (:user-visible-flag t) nil [21358 21456])
            ("put" code nil nil [21551 21586])
            ("suppress-keymap" function (:arguments ("map" "nodigits")) nil [21588 22152])
            ("make-composed-keymap" function (:arguments ("maps" "parent")) nil [22154 22806])
            ("define-key-after" function (:arguments ("keymap" "key" "definition" "after")) nil [22808 24869])
            ("map-keymap-sorted" function (:arguments ("function" "keymap")) nil [24871 25551])
            ("keymap--menu-item-binding" function (:arguments ("val")) nil [25553 26023])
            ("keymap--menu-item-with-binding" function (:arguments ("item" "binding")) nil [26077 26677])
            ("keymap--merge-bindings" function (:arguments ("val1" "val2")) nil [26679 27145])
            ("keymap-canonicalize" function (:arguments ("map")) nil [27147 29016])
            ("put" code nil nil [29018 29075])
            ("keyboard-translate" function (:arguments ("from" "to")) nil [29077 29452])
            ("global-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [29483 30229])
            ("local-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [30231 31035])
            ("global-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [31037 31233])
            ("local-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [31235 31464])
            ("key-substitution-in-progress" variable nil nil [31520 31613])
            ("substitute-key-definition" function (:arguments ("olddef" "newdef" "keymap" "oldmap" "prefix")) nil [31615 33000])
            ("substitute-key-definition-key" function (:arguments ("defn" "olddef" "newdef" "prefix" "keymap")) nil [33002 34667])
            ("global-map" variable nil nil [34816 34990])
            ("esc-map" variable nil nil [34992 35132])
            ("ctl-x-map" variable nil nil [35134 35269])
            ("ctl-x-4-map" variable (:default-value (make-sparse-keymap)) nil [35271 35349])
            ("defalias" code nil nil [35350 35388])
            ("define-key" code nil nil [35389 35431])
            ("ctl-x-5-map" variable (:default-value (make-sparse-keymap)) nil [35433 35505])
            ("defalias" code nil nil [35506 35544])
            ("define-key" code nil nil [35545 35587])
            ("listify-key-sequence-1" variable
               (:constant-flag t
                :default-value (logior 128 134217728))
                nil [35627 35682])
            ("listify-key-sequence" function (:arguments ("key")) nil [35684 35922])
            ("eventp" function (:arguments ("obj")) nil [35924 36125])
            ("event-modifiers" function (:arguments ("event")) nil [36127 37421])
            ("event-basic-type" function (:arguments ("event")) nil [37423 38191])
            ("mouse-movement-p" function (:arguments ("object")) nil [38193 38326])
            ("mouse-event-p" function (:arguments ("object")) nil [38328 38546])
            ("event-start" function (:arguments ("event")) nil [38548 39279])
            ("event-end" function (:arguments ("event")) nil [39281 40121])
            ("event-click-count" function (:arguments ("event")) nil [40123 40333])
            ("posnp" function (:arguments ("obj")) nil [40390 40690])
            ("posn-window" function (:arguments ("position")) nil [40724 40906])
            ("posn-area" function (:arguments ("position")) nil [40908 41232])
            ("posn-point" function (:arguments ("position")) nil [41234 41509])
            ("posn-set-point" function (:arguments ("position")) nil [41511 41831])
            ("posn-x-y" function (:arguments ("position")) nil [41833 42086])
            ("declare-function" code nil nil [42088 42154])
            ("posn-col-row" function (:arguments ("position")) nil [42156 43702])
            ("posn-actual-col-row" function (:arguments ("position")) nil [43704 44138])
            ("posn-timestamp" function (:arguments ("position")) nil [44140 44328])
            ("posn-string" function (:arguments ("position")) nil [44330 44582])
            ("posn-image" function (:arguments ("position")) nil [44584 44824])
            ("posn-object" function (:arguments ("position")) nil [44826 45195])
            ("posn-object-x-y" function (:arguments ("position")) nil [45197 45484])
            ("posn-object-width-height" function (:arguments ("position")) nil [45486 45746])
            ("define-obsolete-function-alias" code nil nil [45789 45854])
            ("define-obsolete-function-alias" code nil nil [45855 45928])
            ("define-obsolete-function-alias" code nil nil [45929 45993])
            ("define-obsolete-function-alias" code nil nil [45994 46065])
            ("define-obsolete-function-alias" code nil nil [46066 46139])
            ("define-obsolete-function-alias" code nil nil [46140 46212])
            ("make-obsolete" code nil nil [46214 46280])
            ("make-obsolete" code nil nil [46281 46330])
            ("insert-string" function (:arguments ("args")) nil [46332 46650])
            ("makehash" function (:arguments ("test")) nil [46652 46772])
            ("defalias" code nil nil [46820 46854])
            ("make-obsolete" code nil nil [46855 46909])
            ("defalias" code nil nil [46910 46946])
            ("make-obsolete" code nil nil [46947 47003])
            ("make-obsolete" code nil nil [47004 47111])
            ("make-obsolete" code nil nil [47112 47173])
            ("set-advertised-calling-convention" code nil nil [47174 47248])
            ("set-advertised-calling-convention" code nil nil [47249 47350])
            ("set-advertised-calling-convention" code nil nil [47351 47419])
            ("set-advertised-calling-convention" code nil nil [47420 47505])
            ("make-obsolete-variable" code nil nil [47910 47985])
            ("make-obsolete-variable" code nil nil [47986 48065])
            ("make-obsolete-variable" code nil nil [48066 48133])
            ("make-obsolete-variable" code nil nil [48134 48199])
            ("make-obsolete-variable" code nil nil [48200 48261])
            ("make-obsolete-variable" code nil nil [48262 48333])
            ("make-obsolete-variable" code nil nil [48334 48399])
            ("make-obsolete-variable" code nil nil [48400 48461])
            ("make-obsolete-variable" code nil nil [48462 48537])
            ("make-obsolete-variable" code nil nil [48538 48615])
            ("make-obsolete-variable" code nil nil [48616 48695])
            ("make-obsolete-variable" code nil nil [48696 48773])
            ("make-obsolete-variable" code nil nil [48774 48853])
            ("make-obsolete-variable" code nil nil [48854 48943])
            ("make-obsolete-variable" code nil nil [48944 49019])
            ("make-obsolete-variable" code nil nil [49020 49101])
            ("make-obsolete-variable" code nil nil [49102 49185])
            ("make-obsolete-variable" code nil nil [49186 49281])
            ("make-obsolete-variable" code nil nil [49282 49369])
            ("make-obsolete-variable" code nil nil [49370 49451])
            ("make-obsolete-variable" code nil nil [49452 49539])
            ("make-obsolete-variable" code nil nil [49540 49631])
            ("make-obsolete-variable" code nil nil [49632 49697])
            ("make-obsolete-variable" code nil nil [49698 49763])
            ("make-obsolete-variable" code nil nil [49764 49839])
            ("make-obsolete-variable" code nil nil [49840 49943])
            ("make-obsolete-variable" code nil nil [49944 50037])
            ("make-obsolete-variable" code nil nil [50038 50101])
            ("make-obsolete-variable" code nil nil [50102 50242])
            ("make-obsolete-variable" code nil nil [50244 50308])
            ("make-obsolete-variable" code nil nil [50309 50392])
            ("make-obsolete-variable" code nil nil [50393 50465])
            ("make-obsolete-variable" code nil nil [50466 50542])
            ("make-obsolete" code nil nil [50543 50599])
            ("make-obsolete" code nil nil [50600 50660])
            ("make-obsolete" code nil nil [50662 50716])
            ("make-obsolete" code nil nil [50717 50773])
            ("define-obsolete-variable-alias" code nil nil [50812 50899])
            ("define-obsolete-variable-alias" code nil nil [50901 50994])
            ("define-obsolete-variable-alias" code nil nil [50995 51088])
            ("make-obsolete-variable" code nil nil [51334 51398])
            ("defvaralias" code nil nil [51400 51457])
            ("defalias" code nil nil [51530 51574])
            ("defalias" code nil nil [51575 51619])
            ("defalias" code nil nil [51620 51653])
            ("defalias" code nil nil [51654 51687])
            ("defalias" code nil nil [51688 51723])
            ("defalias" code nil nil [51724 51750])
            ("defalias" code nil nil [51751 51777])
            ("defalias" code nil nil [51778 51800])
            ("defalias" code nil nil [51826 51865])
            ("defalias" code nil nil [51866 51920])
            ("defalias" code nil nil [51921 51991])
            ("defalias" code nil nil [51992 52064])
            ("defalias" code nil nil [52065 52108])
            ("defalias" code nil nil [52109 52153])
            ("defalias" code nil nil [52154 52187])
            ("defalias" code nil nil [52188 52221])
            ("defalias" code nil nil [52253 52296])
            ("defalias" code nil nil [52297 52346])
            ("defalias" code nil nil [52348 52401])
            ("add-hook" function (:arguments ("hook" "function" "append" "local")) nil [52440 54576])
            ("remove-hook" function (:arguments ("hook" "function" "local")) nil [54578 56246])
            ("letrec" function (:arguments ("binders" "body")) nil [56248 56877])
            ("with-wrapper-hook" function (:arguments ("hook" "args" "body")) nil [56879 59822])
            ("add-to-list" function (:arguments ("list-var" "element" "append" "compare-fn")) nil [59824 61127])
            ("add-to-ordered-list" function (:arguments ("list-var" "element" "order")) nil [61130 62449])
            ("add-to-history" function (:arguments ("history-var" "newelt" "maxelt" "keep-all")) nil [62451 63663])
            ("delay-mode-hooks" variable nil nil [63685 63779])
            ("delayed-mode-hooks" variable nil nil [63780 63861])
            ("make-variable-buffer-local" code nil nil [63862 63910])
            ("put" code nil nil [63911 63953])
            ("change-major-mode-after-body-hook" variable nil nil [63955 64069])
            ("after-change-major-mode-hook" variable nil nil [64071 64173])
            ("run-mode-hooks" function (:arguments ("hooks")) nil [64175 65058])
            ("delay-mode-hooks" function (:arguments ("body")) nil [65060 65461])
            ("derived-mode-p" function (:arguments ("modes")) nil [65522 65835])
            ("minor-mode-list" variable (:default-value (quote (auto-save-mode auto-fill-mode abbrev-mode overwrite-mode view-mode hs-minor-mode))) nil [66026 66219])
            ("add-minor-mode" function (:arguments ("toggle" "name" "keymap" "after" "toggle-fun")) nil [66221 68906])
            ("autoloadp" function (:arguments ("object")) nil [68927 69029])
            ("symbol-file" function (:arguments ("symbol" "type")) nil [69513 70737])
            ("locate-library" function
               (:user-visible-flag t
                :arguments ("library" "nosuffix" "path" "interactive-call"))
                nil [70739 72145])
            ("load-history-regexp" function (:arguments ("file")) nil [72186 72822])
            ("load-history-filename-element" function (:arguments ("file-regexp")) nil [72824 73260])
            ("put" code nil nil [73262 73308])
            ("eval-after-load" function (:arguments ("file" "form")) nil [73309 76250])
            ("after-load-functions" variable nil nil [76252 76425])
            ("do-after-load-evaluation" function (:arguments ("abs-file")) nil [76427 77427])
            ("eval-next-after-load" function (:arguments ("file")) nil [77429 77729])
            ("display-delayed-warnings" function nil nil [77731 77998])
            ("collapse-delayed-warnings" function nil nil [78000 78679])
            ("delayed-warnings-hook" variable (:default-value (quote (collapse-delayed-warnings display-delayed-warnings))) nil [78809 79149])
            ("process-lines" function (:arguments ("program" "args")) nil [79174 79779])
            ("process-live-p" function (:arguments ("process")) nil [79781 80021])
            ("make-obsolete" code nil nil [80041 80166])
            ("process-kill-without-query" function (:arguments ("process" "_flag")) nil [80167 80511])
            ("process-kill-buffer-query-function" function nil nil [80513 80932])
            ("add-hook" code nil nil [80934 81009])
            ("process-get" function (:arguments ("process" "propname")) nil [81040 81252])
            ("process-put" function (:arguments ("process" "propname" "value")) nil [81254 81493])
            ("read-quoted-char-radix" variable (:default-value 8) nil [81533 81678])
            ("custom-declare-variable-early" code nil nil [81680 81923])
            ("read-key-empty-map" variable
               (:constant-flag t
                :default-value (make-sparse-keymap))
                nil [81925 81975])
            ("read-key-delay" variable (:default-value 0.01) nil [81977 82005])
            ("read-key" function (:arguments ("prompt")) nil [82054 84760])
            ("read-quoted-char" function (:arguments ("prompt")) nil [84762 87357])
            ("read-passwd-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map "" (function delete-minibuffer-contents)) map)) nil [87359 87696])
            ("read-passwd" function (:arguments ("prompt" "confirm" "default")) nil [87698 90154])
            ("read-number" function (:arguments ("prompt" "default")) nil [90218 91240])
            ("read-char-choice" function (:arguments ("prompt" "chars" "inhibit-keyboard-quit")) nil [91242 92981])
            ("sit-for" function (:arguments ("seconds" "nodisp" "obsolete")) nil [92983 94490])
            ("set-advertised-calling-convention" code nil nil [94491 94570])
            ("y-or-n-p" function (:arguments ("prompt")) nil [94572 98231])
            ("atomic-change-group" function (:arguments ("body")) nil [98262 99468])
            ("prepare-change-group" function (:arguments ("buffer")) nil [99470 100946])
            ("activate-change-group" function (:arguments ("handle")) nil [100948 101186])
            ("accept-change-group" function (:arguments ("handle")) nil [101188 101479])
            ("cancel-change-group" function (:arguments ("handle")) nil [101481 102652])
            ("define-obsolete-function-alias" code nil nil [102710 102792])
            ("force-mode-line-update" function (:arguments ("all")) nil [102794 103168])
            ("momentary-string-display" function (:arguments ("string" "pos" "exit-char" "message")) nil [103170 104623])
            ("copy-overlay" function (:arguments ("o")) nil [104652 105226])
            ("remove-overlays" function (:arguments ("beg" "end" "name" "val")) nil [105228 106236])
            ("suspend-hook" variable nil nil [106258 106342])
            ("suspend-resume-hook" variable nil nil [106344 106442])
            ("temp-buffer-show-hook" variable nil nil [106444 106660])
            ("temp-buffer-setup-hook" variable nil nil [106662 106893])
            ("defvar-local" code nil nil [106895 107234])
            ("put" code nil nil [107343 107396])
            ("put" code nil nil [107397 107468])
            ("user-emacs-directory" variable
               (:constant-flag t
                :default-value (if (eq system-type (quote ms-dos)) "~/_emacs.d/" "~/.emacs.d/"))
                nil [107470 107845])
            ("locate-user-emacs-file" function (:arguments ("new-name" "old-name")) nil [107847 108839])
            ("buffer-narrowed-p" function nil nil [108872 109006])
            ("find-tag-default" function nil nil [109008 109958])
            ("play-sound" function (:arguments ("sound")) nil [109960 110779])
            ("declare-function" code nil nil [110781 110837])
            ("shell-quote-argument" function (:arguments ("argument")) nil [110839 112984])
            ("string-or-null-p" function (:arguments ("object")) nil [112986 113123])
            ("booleanp" function (:arguments ("object")) nil [113125 113283])
            ("field-at-pos" function (:arguments ("pos")) nil [113285 113555])
            ("sha1" function (:arguments ("object" "start" "end" "binary")) nil [113557 113920])
            ("function-get" function (:arguments ("f" "prop" "autoload")) nil [113922 114732])
            ("yank-handled-properties" variable nil nil [114782 114814])
            ("yank-excluded-properties" variable nil nil [114815 114848])
            ("remove-yank-excluded-properties" function (:arguments ("start" "end")) nil [114850 115639])
            ("yank-undo-function" variable nil nil [115641 115668])
            ("insert-for-yank" function (:arguments ("string")) nil [115670 116029])
            ("insert-for-yank-1" function (:arguments ("string")) nil [116031 118381])
            ("insert-buffer-substring-no-properties" function (:arguments ("buffer" "start" "end")) nil [118383 118868])
            ("insert-buffer-substring-as-yank" function (:arguments ("buffer" "start" "end")) nil [118870 119556])
            ("yank-handle-font-lock-face-property" function (:arguments ("face" "start" "end")) nil [119558 119870])
            ("yank-handle-category-property" function (:arguments ("category" "start" "end")) nil [120009 120447])
            ("start-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [120485 121398])
            ("set-advertised-calling-convention" code nil nil [121399 121528])
            ("start-file-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [121530 121949])
            ("set-advertised-calling-convention" code nil nil [121950 122084])
            ("call-process-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [122086 123531])
            ("process-file-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [123533 123977])
            ("with-current-buffer" function (:arguments ("buffer-or-name" "body")) nil [124032 124420])
            ("internal--before-with-selected-window" function (:arguments ("window")) nil [124422 124942])
            ("internal--after-with-selected-window" function (:arguments ("state")) nil [124944 125504])
            ("with-selected-window" function (:arguments ("window" "body")) nil [125506 126644])
            ("with-selected-frame" function (:arguments ("frame" "body")) nil [126646 127387])
            ("save-window-excursion" function (:arguments ("body")) nil [127389 128208])
            ("internal-temp-output-buffer-show" function (:arguments ("buffer")) nil [128210 129605])
            ("with-output-to-temp-buffer" function (:arguments ("bufname" "body")) nil [129658 131858])
            ("with-temp-file" function (:arguments ("file" "body")) nil [131860 132555])
            ("with-temp-message" function (:arguments ("message" "body")) nil [132557 133484])
            ("with-temp-buffer" function (:arguments ("body")) nil [133486 134045])
            ("with-silent-modifications" function (:arguments ("body")) nil [134047 135243])
            ("with-output-to-string" function (:arguments ("body")) nil [135245 135690])
            ("with-local-quit" function (:arguments ("body")) nil [135692 136447])
            ("while-no-input" function (:arguments ("body")) nil [136449 136949])
            ("condition-case-unless-debug" function (:arguments ("var" "bodyform" "handlers")) nil [136951 137456])
            ("define-obsolete-function-alias" code nil nil [137458 137553])
            ("with-demoted-errors" function (:arguments ("body")) nil [137555 138051])
            ("combine-after-change-calls" function (:arguments ("body")) nil [138053 138748])
            ("with-case-table" function (:arguments ("table" "body")) nil [138750 139271])
            ("save-match-data-internal" variable nil nil [139304 139337])
            ("save-match-data" function (:arguments ("body")) nil [139595 140275])
            ("match-string" function (:arguments ("num" "string")) nil [140277 140922])
            ("match-string-no-properties" function (:arguments ("num" "string")) nil [140924 141648])
            ("match-substitute-replacement" function (:arguments ("replacement" "fixedcase" "literal" "string" "subexp")) nil [141651 142300])
            ("looking-back" function (:arguments ("regexp" "limit" "greedy")) nil [142303 143387])
            ("looking-at-p" function (:arguments ("regexp")) nil [143389 143567])
            ("string-match-p" function (:arguments ("regexp" "string" "start")) nil [143569 143789])
            ("subregexp-context-p" function (:arguments ("regexp" "pos" "start")) nil [143791 145701])
            ("split-string-default-separators" variable
               (:constant-flag t
                :default-value "[ 	
]+")
                nil [145723 146076])
            ("split-string" function (:arguments ("string" "separators" "omit-nulls")) nil [146338 148239])
            ("combine-and-quote-strings" function (:arguments ("strings" "separator")) nil [148241 148802])
            ("split-string-and-unquote" function (:arguments ("string" "separator")) nil [148804 149440])
            ("subst-char-in-string" function (:arguments ("fromchar" "tochar" "string" "inplace")) nil [149474 149878])
            ("replace-regexp-in-string" function (:arguments ("regexp" "rep" "string" "fixedcase" "literal" "subexp" "start")) nil [149880 152459])
            ("string-prefix-p" function (:arguments ("str1" "str2" "ignore-case")) nil [152462 152761])
            ("bidi-string-mark-left-to-right" function (:arguments ("str")) nil [152763 153546])
            ("add-to-invisibility-spec" function (:arguments ("element")) nil [153574 153917])
            ("remove-from-invisibility-spec" function (:arguments ("element")) nil [153919 154143])
            ("with-syntax-table" function (:arguments ("table" "body")) nil [154167 154803])
            ("make-syntax-table" function (:arguments ("oldtable")) nil [154805 155125])
            ("syntax-after" function (:arguments ("pos")) nil [155127 155500])
            ("syntax-class" function (:arguments ("syntax")) nil [155502 155854])
            ("text-clone-maintain" function (:arguments ("ol1" "after" "beg" "end" "_len")) nil [155875 157905])
            ("text-clone-create" function (:arguments ("start" "end" "spreadp" "syntax")) nil [157907 160094])
            ("define-mail-user-agent" function (:arguments ("symbol" "composefunc" "sendfunc" "abortfunc" "hookvar")) nil [160202 161780])
            ("set-temporary-overlay-map" function (:arguments ("map" "keep-pred")) nil [161783 163454])
            ("progress-reporter-update" function (:arguments ("reporter" "value")) nil [164037 164804])
            ("make-progress-reporter" function (:arguments ("message" "min-value" "max-value" "current-value" "min-change" "min-time")) nil [164806 166651])
            ("progress-reporter-force-update" function (:arguments ("reporter" "value" "new-message")) nil [166653 167152])
            ("progress-reporter--pulse-characters" variable (:default-value ["-" "\\" "|" "/"]) nil [167154 167271])
            ("progress-reporter-do-update" function (:arguments ("reporter" "value")) nil [167273 168979])
            ("progress-reporter-done" function (:arguments ("reporter")) nil [168981 169136])
            ("dotimes-with-progress-reporter" function (:arguments ("spec" "message" "body")) nil [169138 170242])
            ("version-separator" variable
               (:constant-flag t
                :default-value ".")
                nil [170279 170438])
            ("version-regexp-alist" variable
               (:constant-flag t
                :default-value (quote (("^[-_+ ]?alpha$" . -3) ("^[-_+]$" . -3) ("^[-_+ ]cvs$" . -3) ("^[-_+ ]?beta$" . -2) ("^[-_+ ]?\\(pre\\|rcc\\)$" . -1))))
                nil [170441 171666])
            ("version-to-list" function (:arguments ("ver")) nil [171669 174007])
            ("version-list-<" function (:arguments ("l1" "l2")) nil [174010 174841])
            ("version-list-=" function (:arguments ("l1" "l2")) nil [174844 175643])
            ("version-list-<=" function (:arguments ("l1" "l2")) nil [175646 176431])
            ("version-list-not-zero" function (:arguments ("lst")) nil [176433 176743])
            ("version<" function (:arguments ("v1" "v2")) nil [176746 177202])
            ("version<=" function (:arguments ("v1" "v2")) nil [177205 177675])
            ("version=" function (:arguments ("v1" "v2")) nil [177677 178123])
            ("menu-bar-separator" variable
               (:constant-flag t
                :default-value (quote ("--")))
                nil [178137 178199])
            ("when" code nil nil [178361 178486]))          
      :file "subr.el.gz"
      :pointmax 178510
      :fsize 53250
      :lastmodtime '(20708 57451 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!Cellar!emacs!24.3!share!emacs!24.3!lisp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
